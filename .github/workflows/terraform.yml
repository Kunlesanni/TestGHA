name: iac_build'

on:
  workflow_dispatch:
  push:
    branches:
    - linux
  pull_request:
    branches:
    - linux

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
# env:
#   ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
#   ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
#   ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  Build:
    runs-on: windows-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Upload IaC
      uses: actions/upload-artifact@v3
      with:
        name: iac
        path: ${{ github.workspace }}

    # - name: Download IaC
    #   id: download-artifact
    #   uses: dawidd6/action-download-artifact@v2
    #   with:
    #     workflow: build.yml
    #     name: iac

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: windows-latest
    environment: dev
    needs: Build
      # env:
      #   this is needed since we are running terraform with read-only permissions
      #   ARM_SKIP_PROVIDER_REGISTRATION: true
    env:
      TF_CLOUD_ORGANIZATION: ${{vars.TFCB_ORG}}
      TF_WORKSPACE: ${{vars.TF_WORKSPACE}}  
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
    - name: Download IaC Artifact
      id: download-iac-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: build.yml
        name: iac

    - name: Az CLI login
      uses: azure/login@v1.4.6
      with:
        creds: ${{ secrets.AZURE_CREDS }}
          
# Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
# Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
# Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
# Apply Terraform changes
    - name: Terraform Apply
      run: terraform apply -auto-approve
