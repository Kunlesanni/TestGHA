name: 'Terraform Plan'

on:
  push:
    branches:
    - AzSample
  pull_request:
    branches:
    - AzSample

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
# env:
#   ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
#   ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
#   ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  upload-files:
    name : 'Upload Files'
    runs-on: windows-latest
    environment: dev
    env:
      TF_CLOUD_ORGANIZATION: ${{vars.TFCB_ORG}}
      TF_WORKSPACE: ${{vars.TF_WORKSPACE}} 

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: true
      name: Terraform Install

    # - name: Upload IaC
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: iac
    #     path: ${{ github.workspace }}



    - name: Az CLI login
      uses: azure/login@v1.4.6
      with:
        creds: ${{ secrets.AZURE_CREDS }}

    - uses: hashicorp/setup-terraform@v2
            
    - run: terraform init
          
    - id: plan
      run: terraform plan -no-color
          
    - run: echo ${{ steps.plan.outputs.stdout }}
    - run: echo ${{ steps.plan.outputs.stderr }}
    - run: echo ${{ steps.plan.outputs.exitcode }}